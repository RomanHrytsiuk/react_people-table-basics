{"version":3,"sources":["App.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","components/People/People.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","role","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleTable","people","slug","useParams","findParent","name","find","person","map","mother","motherName","father","fatherName","sex","born","died","People","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","catch","finally","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.57e10abf.chunk.js","sourcesContent":["import { Outlet, NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={getLinkClass}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={getLinkClass}\n              to=\"people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  const findParent = (name: string | null) => {\n    return people.find(person => person.name === name);\n  };\n\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => {\n            const mother = findParent(person.motherName);\n            const father = findParent(person.fatherName);\n\n            return (\n              <tr\n                data-cy=\"person\"\n                className={classNames({\n                  'has-background-warning': slug === person.slug,\n                })}\n                key={person.slug}\n              >\n                <td>\n                  <NavLink\n                    to={`/people/${person.slug}`}\n                    className={classNames({\n                      'has-text-danger': person.sex === 'f',\n                    })}\n                  >\n                    {person.name}\n                  </NavLink>\n                </td>\n\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n\n                <td>\n                  {mother ? (\n                    <NavLink to={`/people/${mother.slug}`} className=\"has-text-danger\">\n                      {person.motherName || '-'}\n                    </NavLink>\n                  ) : (\n                    person.motherName || '-'\n                  )}\n                </td>\n\n                <td>\n                  {father ? (\n                    <NavLink to={`/people/${father.slug}`}>\n                      {person.fatherName || '-'}\n                    </NavLink>\n                  ) : (\n                    person.fatherName || '-'\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const People = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {people.length === 0 && !isLoading && !errorMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { People } from './components/People';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route index element={<People />} />\n          <Route path=\":slug\" element={<People />} />\n        </Route>\n        <Route\n          path=\"*\"\n          element={<h1 className=\"title\">Page not found</h1>}\n        />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}